{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.letsflow.io/v1.0/scenario",
  "type": "object",
  "properties": {
    "name": {
      "type": "string"
    },
    "version": {
      "type": "string"
    },
    "title": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "actors": {
      "type": "object",
      "additionalProperties": {
        "$ref": "https://schemas.letsflow.io/v1.0/actor"
      }
    },
    "actions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "https://schemas.letsflow.io/v1.0/action"
      }
    },
    "states": {
      "type": "object",
      "properties": {
        "*": {
          "$ref": "#/$defs/partialState"
        }
      },
      "patternProperties": {
        "^\\(.+\\)$": {
          "$ref": "#/$defs/endState"
        }
      },
      "additionalProperties": {
        "$ref": "#/$defs/state"
      },
      "required": ["initial"]
    },
    "vars": {
      "type": "object",
      "additionalProperties": {
        "$ref": "https://schemas.letsflow.io/v1.0/schema"
      }
    },
    "result": {
      "$ref": "https://schemas.letsflow.io/v1.0/schema"
    }
  },
  "required": ["states"],
  "dependentRequired": {
    "name": ["version"]
  },
  "$defs": {
    "partialState": {
      "type": "object",
      "properties": {
        "title": {
          "$ref": "#/$defs/stringFn"
        },
        "instructions": {
          "$ref": "#/$defs/instructions"
        },
        "notify": {
          "$ref": "#/$defs/notify"
        },
        "log": {
          "$ref": "#/$defs/logOrFalse"
        },
        "on": {
          "type": "string",
          "nullable": true
        },
        "after": {
          "$ref": "#/$defs/timePeriod"
        },
        "by": {
          "$ref": "#/$defs/multiString"
        },
        "goto": {
          "type": "string",
          "nullable": true
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/transition"
          }
        }
      },
      "dependentRequired": {
        "on": ["goto"],
        "after": ["goto"]
      },
      "dependentSchemas": {
        "after": {
          "errorMessage": "must not have a property by when property after is present",
          "not": {
            "required": ["by"]
          }
        },
        "transitions": {
          "allOf": [
            {
              "errorMessage": "must not have a property by when property transitions is present",
              "not": { "required": ["by"] }
            },
            {
              "errorMessage": "must not have a property goto when property transitions is present",
              "not": { "required": ["goto"] }
            }
          ]
        }
      },
      "not": {
        "properties": {
          "on": {
            "type": "null"
          }
        },
        "required": ["on", "by"]
      }
    },
    "state": {
      "allOf": [
        {
          "$ref": "#/$defs/partialState"
        },
        {
          "type": "object",
          "oneOf": [
            { "required": ["on"] },
            { "required": ["after"] },
            { "required": ["transitions"] }
          ]
        }
      ]
    },
    "endState": {
      "type": "object",
      "properties": {
        "title": {
          "$ref": "#/$defs/stringFn"
        },
        "instructions": {
          "$ref": "#/$defs/instructions"
        },
        "notify": {
          "$ref": "#/$defs/notify"
        }
      },
      "nullable": true
    },
    "transition": {
      "type": "object",
      "properties": {
        "on": {
          "type": "string",
          "nullable": true
        },
        "by": {
          "$ref": "#/$defs/multiString"
        },
        "after": {
          "$ref": "#/$defs/timePeriod"
        },
        "if": {
          "$ref": "#/$defs/booleanFn"
        },
        "goto": {
          "type": "string",
          "nullable": true
        },
        "log": {
          "$ref": "#/$defs/logOrFalse"
        }
      },
      "required": ["goto"],
      "oneOf": [
        { "required": ["on"] },
        { "required": ["after"] }
      ],
      "dependentSchemas": {
        "after": {
          "not": {
            "required": ["by"]
          }
        }
      }
    },
    "instructions": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/$defs/stringFn"
      }
    },
    "notify": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/$defs/notifyExplicit"
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/$defs/notifyExplicit"
              }
            ]
          }
        }
      ]
    },
    "notifyExplicit": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string"
        },
        "if": {
          "$ref": "#/$defs/booleanFn"
        },
        "after": {
          "$ref": "#/$defs/timePeriod"
        },
        "trigger": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schemas.letsflow.io/v1.0/fn"
            },
            {
              "type": "null"
            }
          ]
        },
        "message": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schemas.letsflow.io/v1.0/fn"
            },
            {
              "type": "object",
              "properties": {
                "<ref>": false,
                "<tpl>": false
              }
            }
          ]
        }
      },
      "required": ["service"]
    },
    "log": {
      "type": "object",
      "properties": {
        "title": {
          "$ref": "#/$defs/stringFn"
        },
        "description": {
          "$ref": "#/$defs/stringFn"
        },
        "if": {
          "$ref": "#/$defs/booleanFn"
        }
      }
    },
    "logOrFalse": {
      "oneOf": [
        {
          "$ref": "#/$defs/log"
        },
        {
          "type": "boolean",
          "const": false
        }
      ]
    },
    "stringFn": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "https://schemas.letsflow.io/v1.0/fn"
        }
      ]
    },
    "booleanFn": {
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "https://schemas.letsflow.io/v1.0/fn"
        }
      ]
    },
    "multiString": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "timePeriod": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^(\\d+)\\s*(s|second|seconds|m|minute|minutes|h|hour|hours|d|day|days|w|week|weeks)$"
        },
        {
          "type": "integer",
          "minimum": 0
        }
      ]
    }
  }
}
